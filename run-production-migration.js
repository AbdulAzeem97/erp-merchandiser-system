import fs from 'fs';
import path from 'path';
import pool from './server/database/sqlite-config.js';
import { seedProductionData } from './server/database/production-seed.js';

async function runProductionMigration() {
  console.log('üöÄ Starting Production Module Migration...');
  
  try {
    // Read and execute the production schema
    console.log('üìã Reading production schema...');
    const schemaPath = path.resolve('./server/database/production-schema.sql');
    const schemaSql = fs.readFileSync(schemaPath, 'utf8');
    
    // Split SQL statements and execute them
    console.log('üóÑÔ∏è Creating production tables...');
    const statements = schemaSql
      .split(';')
      .map(stmt => stmt.trim())
      .filter(stmt => stmt.length > 0);
    
    for (const statement of statements) {
      try {
        pool.db.exec(statement);
      } catch (error) {
        // Ignore "table already exists" errors
        if (!error.message.includes('already exists')) {
          console.error('Error executing statement:', statement);
          throw error;
        }
      }
    }
    
    console.log('‚úÖ Production tables created successfully!');
    
    // Seed the production data
    console.log('üå± Seeding production data...');
    await seedProductionData();
    
    console.log('üéâ Production module migration completed successfully!');
    console.log('');
    console.log('üìã Production Module Structure Created:');
    console.log('  ‚Ä¢ 6 Production Departments');
    console.log('  ‚Ä¢ 50+ Production Processes');
    console.log('  ‚Ä¢ Role-based Access Control (Director, HOD, Supervisor, Operator, Quality Inspector)');
    console.log('  ‚Ä¢ Equipment Management');
    console.log('  ‚Ä¢ Material Consumption Tracking');
    console.log('  ‚Ä¢ Quality Control System');
    console.log('  ‚Ä¢ Production Workflow Templates');
    console.log('  ‚Ä¢ Real-time Job Tracking');
    console.log('  ‚Ä¢ Analytics and Reporting');
    console.log('');
    console.log('üîê Default Production Roles:');
    console.log('  ‚Ä¢ DIRECTOR: Full system access');
    console.log('  ‚Ä¢ HOD: Department-level access');
    console.log('  ‚Ä¢ SUPERVISOR: Team-level management');
    console.log('  ‚Ä¢ OPERATOR: Job execution access');
    console.log('  ‚Ä¢ QUALITY_INSPECTOR: Quality control access');
    
  } catch (error) {
    console.error('‚ùå Migration failed:', error);
    process.exit(1);
  }
}

// Run the migration
runProductionMigration();
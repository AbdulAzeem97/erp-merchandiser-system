services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: erp_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: erp_merchandiser
      POSTGRES_USER: erp_user
      POSTGRES_PASSWORD: DevPassword123!
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init:/docker-entrypoint-initdb.d
      - ./server/database/backups:/backups
    networks:
      - erp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U erp_user -d erp_merchandiser"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # ERP Backend Service
  erp_backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: erp_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: erp_merchandiser
      DB_USER: erp_user
      DB_PASSWORD: DevPassword123!
      PORT: 5001
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:5173
    ports:
      - "5001:5001"
    volumes:
      - ./server/uploads:/app/server/uploads
      - ./logs:/app/logs
    networks:
      - erp_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ERP Frontend Service (Optional - for production)
  erp_frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: erp_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5001
      VITE_SOCKET_URL: http://localhost:5001
    ports:
      - "8080:80"
    networks:
      - erp_network
    depends_on:
      - erp_backend

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: erp_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@erp.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - erp_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  erp_network:
    driver: bridge